vignette('qqman')
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = T)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F, genomewideline = T)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F, genomewideline = F)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F, genomewideline = F, annotateTop = 1)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F, genomewideline = F, annotateTop = 10)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F, genomewideline = F, annotateTop = 0.1)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F, genomewideline = F, annotateTop = T)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F, genomewideline = F, annotatePval = 0.001)
library(qqman)
# Make the Manhattan plot on the gwasResults dataset
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" , suggestiveline = F, genomewideline = F, annotatePval = 0.00001)
library(vqtl)
set.seed(27599)
test.cross <- qtl::sim.cross(map = qtl::sim.map(len = rep(20, 5), n.mar = 5), n.ind = 50)
results <- scanonevar(cross = test.cross)$result
View(results)
vqtl::scanonevar()
qtl::scanonevar()
?qtl::scanonevar()
setwd("//wdxtba361-1/DISK4T/CommonMind/scz_geneset_genotype_ana/res/circosPlot")
install.packages("circlize")
library(circlize)
circos.initializeWithIdeogram()
circos.initializeWithIdeogram(species = "hg19")
qtl::scanonevar()
?qtl::scanonevar()
?qtl::scanonevar()data(fake.bc)
fake.bc <- calc.genoprob(fake.bc, step=2.5)
out <- scanonevar(fake.bc)
color <- c("slateblue", "violetred")
plot(out, lod=1:2, col=color, bandcol="gray80")
legend("topright", lwd=2, c("mean", "variance"), col=color)
# use format="allpeaks" to get summary for each of mean and variance
#  also consider format="tabByCol" or format="tabByChr"
summary(out, format="allpeaks")
# with sex and age as covariates
covar <- fake.bc$pheno[,c("sex", "age")]
out.cov <- scanonevar(fake.bc, mean_covar=covar, var_covar=covar)
data(fake.bc)
fake.bc <- calc.genoprob(fake.bc, step=2.5)
out <- scanonevar(fake.bc)
color <- c("slateblue", "violetred")
plot(out, lod=1:2, col=color, bandcol="gray80")
legend("topright", lwd=2, c("mean", "variance"), col=color)
# use format="allpeaks" to get summary for each of mean and variance
#  also consider format="tabByCol" or format="tabByChr"
summary(out, format="allpeaks")
# with sex and age as covariates
covar <- fake.bc$pheno[,c("sex", "age")]
out.cov <- scanonevar(fake.bc, mean_covar=covar, var_covar=covar)
library(qtl)
data(fake.bc)
fake.bc <- calc.genoprob(fake.bc, step=2.5)
out <- scanonevar(fake.bc)
color <- c("slateblue", "violetred")
plot(out, lod=1:2, col=color, bandcol="gray80")
legend("topright", lwd=2, c("mean", "variance"), col=color)
# use format="allpeaks" to get summary for each of mean and variance
#  also consider format="tabByCol" or format="tabByChr"
summary(out, format="allpeaks")
# with sex and age as covariates
covar <- fake.bc$pheno[,c("sex", "age")]
out.cov <- scanonevar(fake.bc, mean_covar=covar, var_covar=covar)
View(out)
-log10(0.05)
out$neglogP_disp > 1.30103
table(out$neglogP_disp > 1.30103)
bed1 = generateRandomBed(nr = 100)
bed1 = bed1[sample(nrow(bed1), 20), ]
bed2 = generateRandomBed(nr = 100)
bed2 = bed2[sample(nrow(bed2), 20), ]
circos.par("track.height" = 0.1, cell.padding = c(0, 0, 0, 0))
circos.initializeWithIdeogram()
circos.genomicLink(bed1, bed2, col = sample(1:5, 20, replace = TRUE), border = NA)
circos.clear()
View(bed1)
View(bed2)
View(bed1)
t6sig <- read.csv("T6sig.txt")
View(t6sig)
bed1 = generateRandomBed(nr = 100)
circos.genomicLink(bed1, bed2, col = sample(1:5, 20, replace = TRUE), border = NA)
bed2 = generateRandomBed(nr = 100)
circos.genomicLink(bed1, bed2, col = sample(1:5, 20, replace = TRUE), border = NA)
circos.genomicLink(bed1, bed2, col = sample(1:5, 100, replace = TRUE), border = NA)
bed1 = generateRandomBed(nr = 100)
bed1 = bed1[sample(nrow(bed1), 20), ]
bed2 = generateRandomBed(nr = 100)
bed2 = bed2[sample(nrow(bed2), 20), ]
circos.par("track.height" = 0.1, cell.padding = c(0, 0, 0, 0))
circos.initializeWithIdeogram()
circos.genomicLink(bed1, bed2, col = sample(1:5, 100, replace = TRUE), border = NA)
t6sig <- read.csv("T6sig.txt")
fileContent <- read.csv("T6sig.txt")
read.csv("hg19_genePosition.txt")
read.csv("hg19_genePosition.txt", sep = "\t")
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t")
View(genePosition)
bed1 = generateRandomBed(nr = 100)
bed1 = bed1[sample(nrow(bed1), 20), ]
bed2 = generateRandomBed(nr = 100)
bed2 = bed2[sample(nrow(bed2), 20), ]
View(bed1)
View(bed1)
fileContent <- read.csv("T6sig.txt")
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t")
View(fileContent)
View(genePosition)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t")
View(genePosition)
fileContent[,1] %in% fileContent[,2]
genePosition[,1] %in% fileContent[,2]
genePosition[genePosition[,1] %in% fileContent[,2],]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
View(genePosition)
fileContent[,2] %in% genePosition[,1]
tabke*fileContent[,2] %in% genePosition[,1])
table(fileContent[,2] %in% genePosition[,1])
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
View(genePosition)
genePosition[,2] %in% c(1:22,"X","Y")
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t")
genePosition[,2] %in% c(1:22,"X","Y")
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
View(genePosition)
bed1 = generateRandomBed(nr = 100)
bed1 = bed1[sample(nrow(bed1), 20), ]
View(bed1)
bed1 = bed1[sample(nrow(bed1), 20), 1:3]
bed2 = generateRandomBed(nr = 100)
bed2 = bed2[sample(nrow(bed2), 20), 1:3]
circos.par("track.height" = 0.1, cell.padding = c(0, 0, 0, 0))
circos.initializeWithIdeogram()
circos.genomicLink(bed1, bed2, col = sample(1:5, 20, replace = TRUE), border = NA)
View(bed1)
View(fileContent)
View(bed1)
data.frame(chr=fileContent[,3])
data.frame(chr=paste0("chr",fileContent[,3]))
data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,3])
data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,3])
data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4])
data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
bed1 <- bed1[1:20,]
circos.initializeWithIdeogram()
circos.genomicLink(bed1, bed2, col = sample(1:5, 20, replace = TRUE), border = NA)
circos.par("track.height" = 1, cell.padding = c(0, 0, 0, 0))
circos.initializeWithIdeogram()
circos.genomicLink(bed1, bed2, col = sample(1:5, 20, replace = TRUE), border = NA)
circos.clear()
circos.genomicLink(bed1, bed2, col = sample(1:5, 20, replace = TRUE))
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1, bed2, col = colors,border = colors)
circos.genomicLink(bed1, bed2, col = colors,border = NA)
circos.genomicLink(bed1, bed2A)
circos.genomicLink(bed1, bed2)
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
bed1 <- bed1[1:20,]
bed1 = generateRandomBed(nr = 100)
bed1 = bed1[sample(nrow(bed1), 20), 1:3]
bed2 = generateRandomBed(nr = 100)
bed2 = bed2[sample(nrow(bed2), 20), 1:3]
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1, bed2)
circos.clear()
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
bed1 <- bed1[1:20,]
bed2 = generateRandomBed(nr = 100)
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
bed2 = bed2[sample(nrow(bed2), 20), 1:3]
circos.genomicLink(bed1, bed2)
circos.clear()
View(fileContent)
fileContent[,2]
fileContent <- read.csv("T6sig.txt", stringsAsFactors = FALSE)
View(fileContent)
fileContent[,2]
x = fileContent[,2]
genePosition[,3]
genePosition[,1]
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
x = fileContent[,2]
genePosition[,1]
genePosition[,1] == x
genePosition[,1] %in% x
genePosition[genePosition[,1] %in% x]
genePosition[genePosition[,1] %in% x,]
genePosition[genePosition[,1] %in% x,c(2,3,3)]
fileContent <- read.csv("T6sig.txt", stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
genePosition[genePosition[,1] %in% x,c(2,3,3)]
x = fileContent[,2]
genePosition[genePosition[,1] %in% x,c(2,3,3)]
x
x = fileContent[1,2]
genePosition[genePosition[,1] %in% x,c(2,3,3)]
sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,3)]
})
t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,3)]
}))
bed2 <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,3)]
})))
View(bed2)
View(bed2)
fileContent[,3]
fileContent[,2]
fileContent[,2] %in% genePosition[,1]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
library(circlize)
fileContent <- read.csv("T6sig.txt", stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
x = fileContent[1,2]
bed2 <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,3)]
})))
View(bed2)
bed2[,1]
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,3)]
})))
temp$Chromosome.scaffold.name
temp[,1]
unlist(temp[,1])
paste0("chr",unlist(temp[,1]))
temp[,2]
unlist(temp[,2])
as.vector(unlist(temp[,2]))
bed2 <- data.frame(chr=paste0("chr",unlist(temp[,1])), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,3)]
})))
bed2 <- data.frame(chr=paste0("chr",unlist(temp[,1])), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
bed1 <- bed1[1:20,]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,3)]
})))
bed2 <- data.frame(chr=paste0("chr",unlist(temp[,1])), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
circos.initializeWithIdeogram()
circos.genomicLink(bed1, bed2)
#install.packages("circlize")
library(circlize)
fileContent <- read.csv("T6sig.txt", stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,3)]
})))
bed2 <- data.frame(chr=paste0("chr",unlist(temp[,1])), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1, bed2)
circos.clear()
#install.packages("circlize")
library(circlize)
fileContent <- read.csv("T6sig.txt", stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,4)]
})))
bed2 <- data.frame(chr=paste0("chr",unlist(temp[,1])), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1, bed2)
circos.clear()
View(bed2)
View(bed1)
bed2 <- data.frame(chr=paste0("chr",unlist(temp[,1])), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
View(bed2)
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1, bed2)
circos.clear()
circos.genomicLink(region1 = bed1, region2 = bed2)
#install.packages("circlize")
library(circlize)
fileContent <- read.csv("T7sig.txt", stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,4)]
})))
bed2 <- data.frame(chr=paste0("chr",unlist(temp[,1])), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(region1 = bed1, region2 = bed2)
circos.clear()
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,4)]
})))
bed2 <- data.frame(chr=paste0("chr",unlist(temp[,1])), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
View(fileContent)
View(bed2)
temp[,1]
unlist(temp[,1])
as.vector(unlist(temp[,1]))
bed2 <- data.frame(chr=paste0("chr",as.vector(unlist(temp[,1]))), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,4)]
})))
bed2 <- data.frame(chr=paste0("chr",as.vector(unlist(temp[,1]))), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
x <- data.frame(chr=paste0("chr",as.vector(unlist(temp[,1]))), start=as.vector(unlist(temp[,2])), end=as.vector(unlist(temp[,3])))
nrow(tem)
nrow(temp)
temp[,1]
paste0("chr",temp[,1])
temp[,1] <- paste0("chr",temp[,1])
View(temp)
colnames(temp) <- c("chr","start","end")
bed2 <- temp
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(region1 = bed1, region2 = bed2)
#install.packages("circlize")
library(circlize)
fileContent <- read.csv("T7sig.txt", stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
genePosition[genePosition[,1] %in% x,c(2,3,4)]
})))
temp[,1] <- paste0("chr",temp[,1])
colnames(temp) <- c("chr","start","end")
bed2 <- temp
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(region1 = bed1, region2 = bed2)
circos.clear()
circos.genomicLink(bed1,bed2)
circos.initializeWithIdeogram()
circos.genomicLink(bed1,bed2)
circos.genomicLink(bed1[1:10,],bed2[1:10,])
bed1
bed2
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
y <- genePosition[genePosition[,1] %in% x,]
c(genePosition[y,2],min(genePosition[y,3]),min(genePosition[y,4]))
})))
fileContent <- read.csv("T7sig.txt", stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- as.data.frame(t(sapply(fileContent[,2], function(x){
y <- genePosition[genePosition[,1] %in% x,]
c(genePosition[y,2],min(genePosition[y,3]),min(genePosition[y,4]))
})))
temp <- sapply(fileContent[,2], function(x){
y <- genePosition[genePosition[,1] %in% x,]
c(genePosition[y,2],min(genePosition[y,3]),min(genePosition[y,4]))
})
fileContent[,2]
x <- fileContent[1,2]
y <- genePosition[genePosition[,1] %in% x,]
y
y <- genePosition[,1] %in% x
c(genePosition[y,2],min(genePosition[y,3]),min(genePosition[y,4]))
temp <- sapply(fileContent[,2], function(x){
y <- genePosition[,1] %in% x
c(genePosition[y,2],min(genePosition[y,3]),min(genePosition[y,4]))
})
temp
do.call(rbind.data.frame, temp)
temp
as.data.frame(temp)
c(min(genePosition[y,2]),min(genePosition[y,3]),min(genePosition[y,4]))
temp <- sapply(fileContent[,2], function(x){
y <- genePosition[,1] %in% x
c(min(genePosition[y,2]),min(genePosition[y,3]),min(genePosition[y,4]))
})
do.call(rbind.data.frame, temp)
View(temp)
temp <- t(sapply(fileContent[,2], function(x){
y <- genePosition[,1] %in% x
c(min(genePosition[y,2]),min(genePosition[y,3]),min(genePosition[y,4]))
}))
temp[,1] <- paste0("chr",temp[,1])
colnames(temp) <- c("chr","start","end")
bed2 <- temp
bed1
bed2
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1,bed2)
bed2 <- as.data.frame(temp)
bed1
bed2
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1,bed2)
circos.clear()
#install.packages("circlize")
library(circlize)
fileContent <- read.csv("T7sig.txt", stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- t(sapply(fileContent[,2], function(x){
y <- genePosition[,1] %in% x
c(min(genePosition[y,2]),min(genePosition[y,3]),min(genePosition[y,4]))
}))
temp[,1] <- paste0("chr",temp[,1])
colnames(temp) <- c("chr","start","end")
bed2 <- as.data.frame(temp)
bed1
bed2
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1,bed2)
circos.clear()
file <- "T7sig.txt"
basename(file)
gsub(".txt",".png",basename(file))
#install.packages("circlize")
library(circlize)
file <- "T7sig.txt"
fileContent <- read.csv(file, stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- t(sapply(fileContent[,2], function(x){
y <- genePosition[,1] %in% x
c(min(genePosition[y,2]),min(genePosition[y,3]),min(genePosition[y,4]))
}))
temp[,1] <- paste0("chr",temp[,1])
colnames(temp) <- c("chr","start","end")
bed2 <- as.data.frame(temp)
png(filename = gsub(".txt",".png",basename(file)), width = 3000, height = 3000, res = 300)
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1,bed2)
circos.clear()
dev.off()
#install.packages("circlize")
library(circlize)
file <- "T6sig.txt"
fileContent <- read.csv(file, stringsAsFactors = FALSE)
genePosition <- read.csv("hg19_genePosition.txt", sep = "\t", stringsAsFactors = FALSE)
genePosition <- genePosition[genePosition[,2] %in% c(1:22,"X","Y"),]
genePosition <- genePosition[genePosition[,1] %in% fileContent[,2],]
fileContent <- fileContent[fileContent[,2] %in% genePosition[,1],]
bed1 <- data.frame(chr=paste0("chr",fileContent[,3]), start=fileContent[,4], end=fileContent[,4])
temp <- t(sapply(fileContent[,2], function(x){
y <- genePosition[,1] %in% x
c(min(genePosition[y,2]),min(genePosition[y,3]),min(genePosition[y,4]))
}))
temp[,1] <- paste0("chr",temp[,1])
colnames(temp) <- c("chr","start","end")
bed2 <- as.data.frame(temp)
png(filename = gsub(".txt",".png",basename(file)), width = 3000, height = 3000, res = 300)
circos.initializeWithIdeogram()
colors <- sample(1:5, 20, replace = TRUE)
circos.genomicLink(bed1,bed2)
circos.clear()
dev.off()
